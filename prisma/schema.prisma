generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ===================== ENUMS =====================
enum Semester {
  S1
  S2
}

enum StatusHafalan {
  ziyadah
  murojaah
}

enum StatusTarget {
  belum
  proses
  selesai
}

enum Hari {
  Senin
  Selasa
  Rabu
  Kamis
  Jumat
  Sabtu
  Minggu
}

enum StatusAbsensi {
  alpha
  izin
  masuk
}

enum JenisUjian {
  tahfidz
  tasmi
  lainnya
}

enum NotifType {
  user
  hafalan
  rapot
  absensi
  pengumuman
}

enum RefType {
  guru
  halaqah
  santri
}

// ===================== MODELS =====================

// Master Role
model Role {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[]
}

// User
model User {
  id          Int       @id @default(autoincrement())
  username    String    @unique
  password    String
  namaLengkap String
  foto        String?
  noTlp       String?
  passCode    String?

  // Relasi ke Role
  role        Role      @relation(fields: [roleId], references: [id])
  roleId      Int

  guruHalaqah Halaqah[]

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // relasi lain
  notif       Notifikasi[]
  logs        AuditLog[]

  HalaqahSantri HalaqahSantri[]

  Hafalan Hafalan[]

  TargetHafalan TargetHafalan[]

  Absensi Absensi[]

  Prestasi Prestasi[]

  Ujian Ujian[]
}

// ===================== Data Akademik =====================

model Halaqah {
  id          Int            @id @default(autoincrement())
  namaHalaqah String
  guru        User           @relation(fields: [guruId], references: [id])
  guruId      Int
  santri      HalaqahSantri[]
  jadwal      Jadwal[]
  ujian       Ujian[]
}

model HalaqahSantri {
  id            Int      @id @default(autoincrement())
  tahunAkademik String
  semester      Semester
  halaqah       Halaqah  @relation(fields: [halaqahId], references: [id])
  halaqahId     Int
  santri        User     @relation(fields: [santriId], references: [id])
  santriId      Int
}

model Hafalan {
  id          Int           @id @default(autoincrement())
  tanggal     DateTime
  surat       String
  ayatMulai   Int
  ayatSelesai Int
  status      StatusHafalan
  keterangan  String?
  santri      User          @relation(fields: [santriId], references: [id])
  santriId    Int
}

model TargetHafalan {
  id         Int          @id @default(autoincrement())
  surat      String
  ayatTarget Int
  deadline   DateTime
  status     StatusTarget
  santri     User         @relation(fields: [santriId], references: [id])
  santriId   Int
}

model Jadwal {
  id        Int      @id @default(autoincrement())
  hari      Hari
  jamMulai  DateTime
  jamSelesai DateTime
  halaqah   Halaqah  @relation(fields: [halaqahId], references: [id])
  halaqahId Int
  absensi   Absensi[]
}

model Absensi {
  id       Int           @id @default(autoincrement())
  status   StatusAbsensi
  tanggal  DateTime
  santri   User          @relation(fields: [santriId], references: [id])
  santriId Int
  jadwal   Jadwal        @relation(fields: [jadwalId], references: [id])
  jadwalId Int
}

model Prestasi {
  id           Int    @id @default(autoincrement())
  namaPrestasi String
  keterangan   String?
  kategori     String?
  tahun        Int
  santri       User   @relation(fields: [santriId], references: [id])
  santriId     Int
}

model Raport {
  id            Int            @id @default(autoincrement())
  semester      Semester
  tahunAkademik String
  details       RaportDetail[]
  ujian         Ujian[]
}

model RaportDetail {
  id           Int     @id @default(autoincrement())
  nilaiAkhir   Float
  catatan      String?
  tanggalCetak DateTime
  raport       Raport  @relation(fields: [raportId], references: [id])
  raportId     Int
}

model Ujian {
  id         Int        @id @default(autoincrement())
  jenis      JenisUjian
  nilai      Float
  tanggal    DateTime
  keterangan String?
  santri     User       @relation(fields: [santriId], references: [id])
  santriId   Int
  halaqah    Halaqah    @relation(fields: [halaqahId], references: [id])
  halaqahId  Int
  raport     Raport     @relation(fields: [raportId], references: [id])
  raportId   Int
}

// ===================== Sistem & Notifikasi =====================

model Notifikasi {
  id       Int       @id @default(autoincrement())
  pesan    String
  tanggal  DateTime  @default(now())
  type     NotifType
  refId    Int?
  user     User      @relation(fields: [userId], references: [id])
  userId   Int
}

model Grafik {
  id         Int     @id @default(autoincrement())
  tipeGrafik String
  periode    String
  dataJson   Json
  refId      Int?
  refType    RefType
}

model Backup {
  id           Int      @id @default(autoincrement())
  namaFile     String
  tanggalBackup DateTime @default(now())
}

model AuditLog {
  id        Int      @id @default(autoincrement())
  action    String
  keterangan String?
  tanggal   DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
}

model Pengumuman {
  id      Int     @id @default(autoincrement())
  judul   String
  isi     String
  tanggal DateTime
}
